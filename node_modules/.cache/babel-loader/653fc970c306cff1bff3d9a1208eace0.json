{"remainingRequest":"C:\\Users\\haoyu Song\\Downloads\\前台项目\\sph_qiantai\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\haoyu Song\\Downloads\\前台项目\\sph_qiantai\\src\\api\\mockRequests.js","dependencies":[{"path":"C:\\Users\\haoyu Song\\Downloads\\前台项目\\sph_qiantai\\src\\api\\mockRequests.js","mtime":1652872868271},{"path":"C:\\Users\\haoyu Song\\Downloads\\前台项目\\sph_qiantai\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\haoyu Song\\Downloads\\前台项目\\sph_qiantai\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7Ci8v5a+55LqOYXhpb3Pov5vooYzkuozmrKHlsIHoo4UKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsgLy/lvJXlhaXov5vluqbmnaEKCmltcG9ydCBucHJvZ3Jlc3MgZnJvbSAnbnByb2dyZXNzJzsgLy/lvJXlhaXnm7jlhbPov5vluqbmnaHnmoTmoLflvI8KCmltcG9ydCAibnByb2dyZXNzL25wcm9ncmVzcy5jc3MiOyAvL2F4aW9zLmNyZWF0ZeaWueazleaJp+ihjCzlhbblrp7ov5Tlm57kuIDkuKpheGlvc+WSjHJlcXVlc3TkuIDmoLfnmoQKCnZhciByZXF1ZXN0cyA9IGF4aW9zLmNyZWF0ZSh7CiAgLy/ln7rnoYDot6/lvoQs5Y+R6K+35rGCVVJM5pC65bimYXBp44CQ5Y+R546wOuecn+WunuacjeWKoeWZqOaOpeWPo+mDveaQuuW4pi9hcGnjgJEKICBiYXNlVVJMOiAiL21vY2siLAogIC8v6LaF5pe255qE6K6+572uCiAgdGltZW91dDogNTAwMAp9KTsgLy/or7fmsYLmi6bmiKrlmag65bCG5p2l6aG555uu5Lit44CQTuS4quivt+axguOAke+8jOWPquimgeWPkeivt+axgizkvJrop6blj5Hor7fmsYLmi6bmiKrlmaghISEKCnJlcXVlc3RzLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgLy/or7fmsYLmi6bmiKrlmag66K+35rGC5aS044CQaGVhZGVy44CRLOivt+axguWktOiDveWQpue7meacjeWKoeWZqOaQuuW4puWPguaVsAogIC8v6K+35rGC5oum5oiq5Zmo77ya5YW25a6e6aG555uu5Lit6L+Y5pyJ5LiA5Liq6YeN6KaB55qE5L2c55SoLOe7meacjeWKoeWZqOaQuuW4puivt+axguS7rOeahOWFrOWFseeahOWPguaVsAogIC8v6L+b5bqm5p2h5byA5aeLCiAgbnByb2dyZXNzLnN0YXJ0KCk7CiAgcmV0dXJuIGNvbmZpZzsKfSk7IC8v5ZON5bqU5oum5oiq5Zmo77ya6K+35rGC5pWw5o2u6L+U5Zue5Lya5omn6KGMCgpyZXF1ZXN0cy5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXMpIHsKICAvL3Jlczrlrp7otKjlsLHmmK/pobnnm67kuK3lj5Hor7fmsYLjgIHmnI3liqHlmajov5Tlm57nmoTmlbDmja4KICAvL+i/m+W6puadoee7k+adnwogIG5wcm9ncmVzcy5kb25lKCk7CiAgcmV0dXJuIHJlcy5kYXRhOwp9LCBmdW5jdGlvbiAoZXJyKSB7CiAgLy/muKnppqjmj5DnpLo65p+Q5LiA5aSp5Y+R6K+35rGCLOivt+axguWksei0pSzor7fmsYLlpLHotKXnmoTkv6Hmga/miZPljbDlh7rmnaUKICBhbGVydChlcnIubWVzc2FnZSk7IC8v57uI5q2iUHJvbWlzZemTvgoKICByZXR1cm4gbmV3IFByb21pc2UoKTsKfSk7IC8v5pyA5ZCO6ZyA6KaB5pq06ZyyOuaatOmcsueahOaYr+a3u+WKoOaWsOeahOWKn+iDveeahGF4aW9zLOWNs+S4unJlcXVlc3RzCgpleHBvcnQgZGVmYXVsdCByZXF1ZXN0czs="},{"version":3,"sources":["C:/Users/haoyu Song/Downloads/前台项目/sph_qiantai/src/api/mockRequests.js"],"names":["axios","nprogress","requests","create","baseURL","timeout","interceptors","request","use","config","start","response","res","done","data","err","alert","message","Promise"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CACA;;AACA,OAAO,yBAAP,C,CAEA;;AACA,IAAIC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AACxB;AACAC,EAAAA,OAAO,EAAE,OAFe;AAGxB;AACAC,EAAAA,OAAO,EAAE;AAJe,CAAb,CAAf,C,CAOA;;AACAH,QAAQ,CAACI,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAAAC,MAAM,EAAI;AACxC;AACA;AACA;AACAR,EAAAA,SAAS,CAACS,KAAV;AACA,SAAOD,MAAP;AACH,CAND,E,CASA;;AACAP,QAAQ,CAACI,YAAT,CAAsBK,QAAtB,CAA+BH,GAA/B,CAAmC,UAACI,GAAD,EAAS;AACxC;AACA;AACAX,EAAAA,SAAS,CAACY,IAAV;AACA,SAAOD,GAAG,CAACE,IAAX;AACH,CALD,EAKG,UAACC,GAAD,EAAS;AACR;AACAC,EAAAA,KAAK,CAACD,GAAG,CAACE,OAAL,CAAL,CAFQ,CAGR;;AACA,SAAO,IAAIC,OAAJ,EAAP;AACH,CAVD,E,CAYA;;AACA,eAAehB,QAAf","sourcesContent":["//对于axios进行二次封装\r\nimport axios from \"axios\";\r\n\r\n//引入进度条\r\nimport nprogress from 'nprogress';\r\n//引入相关进度条的样式\r\nimport \"nprogress/nprogress.css\";\r\n\r\n//axios.create方法执行,其实返回一个axios和request一样的\r\nlet requests = axios.create({\r\n    //基础路径,发请求URL携带api【发现:真实服务器接口都携带/api】\r\n    baseURL: \"/mock\",\r\n    //超时的设置\r\n    timeout: 5000\r\n});\r\n\r\n//请求拦截器:将来项目中【N个请求】，只要发请求,会触发请求拦截器!!!\r\nrequests.interceptors.request.use(config => {\r\n    //请求拦截器:请求头【header】,请求头能否给服务器携带参数\r\n    //请求拦截器：其实项目中还有一个重要的作用,给服务器携带请求们的公共的参数\r\n    //进度条开始\r\n    nprogress.start();\r\n    return config;\r\n});\r\n\r\n\r\n//响应拦截器：请求数据返回会执行\r\nrequests.interceptors.response.use((res) => {\r\n    //res:实质就是项目中发请求、服务器返回的数据\r\n    //进度条结束\r\n    nprogress.done();\r\n    return res.data;\r\n}, (err) => {\r\n    //温馨提示:某一天发请求,请求失败,请求失败的信息打印出来\r\n    alert(err.message);\r\n    //终止Promise链\r\n    return new Promise();\r\n});\r\n\r\n//最后需要暴露:暴露的是添加新的功能的axios,即为requests\r\nexport default requests;\r\n\r\n\r\n\r\n\r\n"]}]}